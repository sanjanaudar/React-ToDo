{"version":3,"sources":["components/Todoforms.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todoforms","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","Todolist","setTodos","test","newTodos","updatedTodos","removedArr","filter","todoid","newvalue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAsCeA,MApCf,SAAmBC,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,KAGhBC,EAAWC,iBAAO,MAmBxB,OAjBAC,qBAAU,WACNF,EAASG,QAAQC,WAiBjB,uBAAMC,UAAU,YAAYC,SAXX,SAAAC,GACjBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACXG,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,KAAMf,IAEdC,EAAS,KAIL,UACE,uBAAOe,KAAK,OACZC,YAAY,aACZC,MAAOlB,EAAOmB,KAAK,OACnBZ,UAAU,aACVa,SAnBc,SAAAX,GAChBR,EAASQ,EAAEY,OAAOH,QAmB1BI,IAAKpB,IAEK,wBAAQK,UAAU,cAAlB,qBCmBKgB,MA/Cf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACjC5B,mBAAS,CAC7BY,GAAG,KACHO,MAAM,KAH+C,mBAClDU,EADkD,KAC5CC,EAD4C,KAczD,OAAGD,EAAKjB,GACG,cAAC,EAAD,CAAWiB,KAAOA,EAAMpB,SATd,SAAAU,GACjBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACJlB,GAAG,KACHO,MAAM,QAQPM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBACIzB,UAAWwB,EAAKE,WAAa,oBAAoB,WADrD,UAII,qBAEIC,QAAS,kBAAKT,EAAaM,EAAKpB,KAFpC,SAIKoB,EAAKhB,MAHDgB,EAAKpB,IAKb,sBACGJ,UAAU,QADb,UAEG,cAAC,IAAD,CACI2B,QAAS,kBAAMR,EAAWK,EAAKpB,KAC/BJ,UAAU,gBAEjB,cAAC,IAAD,CACA2B,QAAS,kBAAML,EAAQ,CACnBlB,GAAGoB,EAAKpB,GACRO,MAAMa,EAAKhB,QAERR,UAAU,mBAnBbyB,OCuBFG,MA7Cf,WAAqB,IAAD,EACUpC,mBAAS,IADnB,mBACTyB,EADS,KACFY,EADE,KA+BhB,OACI,gCACJ,iDACA,cAAC,EAAD,CAAW5B,SA/BK,SAAAuB,GACZ,GAAIA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAAnC,CAIA,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaP,IAC3BY,EAASE,OA0Bb,cAAC,EAAD,CACId,MAAOA,EACPC,aAfgB,SAAAd,GAChB,IAAI4B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHGA,EAAKpB,KAAMA,IACVoB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IASTb,WApBe,SAAAf,GACf,IAAM6B,EAAa,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKpB,KAAOA,KACzDyB,EAASI,IAmBTb,WA3Be,SAACe,EAAQC,GACpBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAG3CqB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAKlC,KAAO+B,EAASC,EAAWE,eCR5DC,MARf,WACE,OACE,qBAAKvC,UAAU,WAAf,SACI,cAAC,EAAD,OCHRwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.486ebc44.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n//rfce gives the boiler plate\r\nfunction Todoforms(props) {\r\n    const [input, setInput] = useState('');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange =e =>{\r\n        setInput(e.target.value);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n    setInput('');\r\n    };\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n          <input type=\"text\" \r\n          placeholder=\"Add a Todo\" \r\n          value={input} name=\"text\" \r\n          className=\"todo-input\"\r\n          onChange ={handleChange}\r\nref={inputRef}\r\n          />\r\n          <button className=\"todo-button\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Todoforms;","import React, {useState} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\nimport Todoforms from './Todoforms';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id:null,\r\n        value:\"\"\r\n    });\r\n\r\n    const submitUpdate = value=>{\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id:null,\r\n            value:\"\"\r\n        });\r\n    }\r\n\r\n    if(edit.id){\r\n        return <Todoforms edit ={edit} onSubmit ={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? 'todo-row complete':'todo-row'} \r\n            key={index}\r\n        >    \r\n            <div \r\n                key={todo.id}\r\n                onClick={()=> completeTodo(todo.id)}\r\n            >\r\n                {todo.text}\r\n             </div>      \r\n             <div \r\n                className=\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\"\r\n                />\r\n             <TiEdit\r\n             onClick={() => setEdit({\r\n                 id:todo.id,\r\n                 value:todo.text\r\n             })}\r\n                    className=\"edit-icon\" />\r\n             </div>  \r\n        </div>       \r\n    )\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React, {useState} from 'react'\r\nimport Todo from './Todo';\r\nimport Todoforms from \"./Todoforms\"\r\n\r\nfunction Todolist() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoid, newvalue) => {\r\n        if(!newvalue.text || /^\\s*$/.test(newvalue.text)){\r\n            return\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoid ? newvalue : item)))\r\n    }\r\n    const removeTodo = id =>{\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n        setTodos(removedArr);\r\n    }\r\n    const completeTodo =id =>{\r\n        let updatedTodos = todos.map(todo =>{\r\n            if(todo.id ===id){\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n    return (\r\n        <div>\r\n    <h1>Plan for today:</h1>\r\n    <Todoforms onSubmit ={addTodo}/>  \r\n    <Todo \r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo ={updateTodo}\r\n    />      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist;\r\n","import React from 'react'; \nimport './App.css';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n        <Todolist />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}